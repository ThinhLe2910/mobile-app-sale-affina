// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name IntelinLoggerKit
import Foundation
@_exported import IntelinLoggerKit
import OSLog
import Swift
import UIKit
import _Concurrency
public enum Model : Swift.String {
  case simulator, iPod1, iPod2, iPod3, iPod4, iPod5, iPod6, iPod7, iPad2, iPad3, iPad4, iPadAir, iPadAir2, iPadAir3, iPadAir4, iPadAir5, iPad5, iPad6, iPad7, iPad8, iPad9, iPadMini, iPadMini2, iPadMini3, iPadMini4, iPadMini5, iPadMini6, iPadPro9_7, iPadPro10_5, iPadPro11, iPadPro2_11, iPadPro3_11, iPadPro12_9, iPadPro2_12_9, iPadPro3_12_9, iPadPro4_12_9, iPadPro5_12_9, iPhone4, iPhone4S, iPhone5, iPhone5S, iPhone5C, iPhone6, iPhone6Plus, iPhone6S, iPhone6SPlus, iPhoneSE, iPhone7, iPhone7Plus, iPhone8, iPhone8Plus, iPhoneX, iPhoneXS, iPhoneXSMax, iPhoneXR, iPhone11, iPhone11Pro, iPhone11ProMax, iPhoneSE2, iPhone12Mini, iPhone12, iPhone12Pro, iPhone12ProMax, iPhone13Mini, iPhone13, iPhone13Pro, iPhone13ProMax, iPhoneSE3, iPhone14, iPhone14Plus, iPhone14Pro, iPhone14ProMax, AppleWatch1, AppleWatchS1, AppleWatchS2, AppleWatchS3, AppleWatchS4, AppleWatchS5, AppleWatchSE, AppleWatchS6, AppleWatchS7, AppleTV1, AppleTV2, AppleTV3, AppleTV4, AppleTV_4K, AppleTV2_4K, unrecognized
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension UIKit.UIDevice {
  @_Concurrency.MainActor(unsafe) public var type: IntelinLoggerKit.Model {
    get
  }
}
public enum LogEvents : Swift.String {
  case debug
  case info
  case event
  case warn
  case error
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class IntelinLogger {
  public static let sharedInstance: IntelinLoggerKit.IntelinLogger
  public func Logs(event: IntelinLoggerKit.LogEvents = LogEvents.debug, message: Swift.String, fileName: Swift.String = #file, funcName: Swift.String = #function, line: Swift.Int = #line)
  public func viewCycleLogs(fileName: Swift.String = #file, funcName: Swift.String = #function, line: Swift.Int = #line)
  public func errorLogs()
  public static let RecieveSignal: @convention(c) (Swift.Int32) -> Swift.Void
  public func checkForErrorLog(errorTitle: Swift.String, errorDesc: Swift.String, completion: @escaping (() -> Swift.Void))
  public func checkForErrorLogVC(errorTitle: Swift.String, errorDesc: Swift.String, completion: @escaping (() -> Swift.Void)) -> UIKit.UIViewController?
  public class func getInfo() -> Swift.String
  public func handleBeforeCloseApp()
  public func handleWhenLaunchApp() -> Swift.Bool
  @objc deinit
}
extension UIKit.UIFont {
  public static let loadMyFonts: ()
}
extension IntelinLoggerKit.Model : Swift.Equatable {}
extension IntelinLoggerKit.Model : Swift.Hashable {}
extension IntelinLoggerKit.Model : Swift.RawRepresentable {}
extension IntelinLoggerKit.LogEvents : Swift.Equatable {}
extension IntelinLoggerKit.LogEvents : Swift.Hashable {}
extension IntelinLoggerKit.LogEvents : Swift.RawRepresentable {}
